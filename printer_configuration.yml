- name: Printer configuration
  hosts: "{{ branch_no }}-printer{{printer_no}}"
  connection: local
  gather_facts: no
  vars:
    tower_user: "apiworker"
    tower_pass: "test123"
    tower_ip: "10.17.11.11"
 
  tasks:
    - name: Discover printer model
      local_action: command snmpget -v2c -c public {{ inventory_hostname }} SNMPv2-MIB::sysDescr.0
      register: response

    - name: Set printer model fact
      set_fact:
        printer_model: "{{ response.stdout | regex_replace('.*STRING: (.*); .*', '\\1') | regex_replace('.*STRING: (.*)', '\\1')}}"

    - name: Configure Xerox printer
      
      block:
        - name: Print model
          debug:
            msg: "Rozpoznałem drukarke WorkCentre 3345"
          
        - name: Add email address
          block:
            - name: Run URL command 
              uri:
                url: "http://{{inventory_hostname}}/addressbook/SetIndividualInABook.cgi"
                method: POST
                return_content: yes
                force_basic_auth: yes
                url_username: "{{ xerox_user }}"
                url_password: "{{ xerox_password }}"
                body_format: form-urlencoded
                body:
                  DISPLAYNAME: "{{email}}"
                  EMAIL: "{{email}}"
                  CMD: add
                headers:
                  Cookie: SESSION_ID=3554
              register: output_set_email
        
            - name: Parse output
              set_fact:
                output_set_email_fact: "{{ output_set_email.content | replace(':', ': ') | from_yaml }}"
        
            - name: Print result
              debug:
                msg: "Ustawiono adres email {{ email }}"
              when: output_set_email_fact.success
              
            - name: Print result
              debug:
                msg: "Nie ustawiono adresu email!!!"
              when: not output_set_email_fact.success
              
          when: email | default('', true) | trim != ''
          
        - name: Change paper tray
          block:
            - name: Run URL command - copy tray
              uri:
                url: "http://{{inventory_hostname}}/properties/services/copy/SetCopyConfiguration.cgi"
                method: POST
                return_content: yes
                force_basic_auth: yes
                url_username: "{{ xerox_user }}"
                url_password: "{{ xerox_password }}"
                body_format: form-urlencoded
                body:
                  COPY_PAPER_SOURCE_OP: "{{tray}}"
                headers:
                  Cookie: SESSION_ID=3554
              register: output_set_copy_tray
        
            - name: Print result
              debug:
                msg: "Ustawiono tace kopiowania: {{ tray }}"
              when: not output_set_copy_tray.failed
              
            - name: Print result
              debug:
                msg: "Nie ustawiono tacy kopiowania!!!"
              when: output_set_copy_tray.failed

            - name: Run URL command - print tray
              uri:
                url: "http://{{inventory_hostname}}/SaveChanges.cgi"
                method: POST
                return_content: yes
                force_basic_auth: yes
                url_username: "{{ xerox_user }}"
                url_password: "{{ xerox_password }}"
                body_format: form-urlencoded
                body:
                  GSI_AUTO_TRAY_SWITCH:	"0"
                  GSI_PCL_IGNORE_PAPER_SIZE:	"1"
                headers:
                  Cookie: SESSION_ID=3554
              register: output_set_print_tray
           
            - name: Print result
              debug:
                msg: "Ustawiono tace drukowania: Bypass=off, Tray Switching=disabled"
              when: not output_set_print_tray.failed
              
            - name: Print result
              debug:
                msg: "Nie ustawiono tacy kopiowania!!!"
              when: output_set_print_tray.failed 
         
          when: tray | default('', true) | trim != ''

        - name: Delete jobs
          block:
            - name: Run URL command - get jobs id
              uri:
                url: "http://{{inventory_hostname}}/jobs/activeJobs.dhtml"
                method: POST
                return_content: yes
                force_basic_auth: yes
                url_username: "{{ xerox_user }}"
                url_password: "{{ xerox_password }}"
                headers:
                  Cookie: SESSION_ID=3554
                  JOB_SUBMISSION: ""
              register: output_del_jobs
              
            - name: Set fact jobs id
              set_fact:
                jobs_id_fact: "{{output_del_jobs.content | replace('\t','') | replace('\r','') | replace('\n','') | regex_replace('.*varjobIndex.*\"(.*)\".*varjobName=.*', '\\1') }}"
            
            - name: Usuwam zadania!
              uri:
                url: "http://{{inventory_hostname}}/jobs/DeleteActiveJob.cgi"
                method: POST
                return_content: yes
                force_basic_auth: yes
                url_username: "{{ xerox_user }}"
                url_password: "{{ xerox_password }}"
                body_format: form-urlencoded
                body:
                  delIndex:	"{{ item }}"
                  selIndex: "0"
                  secureId: ""
                headers:
                  Cookie: SESSION_ID=3554
                  JOB_SUBMISSION: ""   
              with_items: "{{ jobs_id_fact.split(',') }}"
              when: jobs_id_fact | default('', true) | trim != ''
                            
          when: jobs_del == "tak"
                  
      when: printer_model == 'Xerox WorkCentre 3345'

    - name: Configure Samsung SL-M3870FW printer
      block:
        - name: Print model
          debug:
            msg: "Rozpoznalem drukarke Samsung SL-M3870FW"

        - name: Add email address
          block:
            - name: Get speed no 
              uri:
                url: "http://{{inventory_hostname}}/sws/app/addressbook/GetUsedSpeedNoInABook.jsp"
                method: POST
                return_content: yes
                body_format: form-urlencoded
                body:
                  type: "0"
              register: output_get_speed_no
        
            - name: Parse output
              set_fact:
                speed_no: "{{ (output_get_speed_no.content | from_yaml).usedSpeedNo.split(',')[-1] | int + 1  }}"
                
            - name: Run URL command 
              uri:
                url: "http://{{inventory_hostname}}/sws/app/addressbook/SetIndividualInABook.jsp"
                method: POST
                return_content: yes
                body_format: form-urlencoded
                body:
                  cmd: add
                  ispeedNo: "{{ speed_no }}"
                  iname: "{{ email }}"
                  email: "{{ email }}"
                  favorite:	"0"
              register: output_set_email
            
            - name: Parse output
              set_fact:
                output_set_email_fact: "{{ output_set_email.content | replace(':', ': ') | from_yaml }}"
        
            - name: Print result
              debug:
                msg: "Ustawiono adres email {{ email }}"
              when: output_set_email_fact.success
              
            - name: Print result
              debug:
                msg: "Nie ustawiono adresu email!!!"
              when: not output_set_email_fact.success
              
          when: email | default('', true) | trim != ''
          
        - name: Delete jobs
          block:
            - name: Run URL command - get jobs id
              uri:
                url: "http://{{inventory_hostname}}/sws/app/gnb/jobs/GetActiveJobs.jsp"
                method: POST
                return_content: yes
                body_format: form-urlencoded
                body:
                  start: "0"
                  limit: "100"
              register: output_del_jobs
                            
            - name: Set fact jobs id
              set_fact:
                jobs_id_fact: "{{output_del_jobs.content | replace('no', 'job_id') | from_yaml }}"        
                        
            - name: Run URL command - delete jobs id
              uri:
                url: "http://{{inventory_hostname}}/sws/app/gnb/jobs/DeleteActiveJobs.jsp"
                method: POST
                return_content: yes
                force_basic_auth: yes
                url_username: "{{ samsung_user }}"
                url_password: "{{ samsung_password }}"
                body_format: form-urlencoded
                body:
                  "no": "{{ item['job_id'] }}"
              register: output_del_jobs_status            
              loop: "{{ jobs_id_fact['recordData'] }}"
              when: jobs_id_fact['totalCount'] | int > 0

            - name: Waiting for printer
              pause:
                seconds: 2

            - name: Run URL command - get jobs id
              uri:
                url: "http://{{inventory_hostname}}/sws/app/gnb/jobs/GetActiveJobs.jsp"
                method: POST
                return_content: yes
                body_format: form-urlencoded
                body:
                  start: "0"
                  limit: "100"
              register: post_output_del_jobs
                            
            - name: Set fact jobs id
              set_fact:
                post_jobs_id_fact: "{{post_output_del_jobs['content'] | from_yaml }}"
            
            - name: Jobs delete status
              debug:
                msg: "Uruchom skrypt jeszcze raz - zostały zadania w kolejce"
              when: post_jobs_id_fact['totalCount'] | int > 0
              
            - name: Jobs delete status
              debug:
                msg: "Nie ma zadan w kolejce"
              when: post_jobs_id_fact['totalCount'] | int == 0                   
          
          when: jobs_del == "tak"         

        - name: Add FTP terminals destinations
          block:
            - name: Run URL command - get terminals
              uri:
                url: "https://{{tower_ip}}/api/v2/hosts/?search={{branch_no}}-t"
                method: GET
                return_content: yes
                force_basic_auth: yes
                validate_certs: no
                url_username: "{{tower_user}}"
                url_password: "{{tower_pass}}"
                headers:
                  Content-type: "application/json"
              register: output_tower
              
            - name:
              set_fact:
                terminal_list: "{{ output_tower['json']['results'] | map(attribute='name') | flatten }}"
                                         
            - name: Run URL command - get addresses
              uri:
                url: "http://{{inventory_hostname}}/sws/app/addressbook/GetIndividualInABook.jsp"
                method: POST
                return_content: yes
                body_format: form-urlencoded
                body:
                  ispeedNo: "0"
                  condition: "10"
                  keyword: "0"
                  sort: "1"
                  start: "0"
                  limit: "30"
              register: output_get_addresses    
            
            - name: parse for configured ftp addresses
              set_fact:
                terminal_ftp_present: "{{ (output_get_addresses['content'] | from_yaml )['recordData'] | map(attribute='ftp') | flatten | map(attribute='addr') | flatten | select() | list  }}"
                
            - name: Initialize list
              set_fact:
                terminal_ftp_to_configure: []
                
            - name: create list
              set_fact:
                terminal_ftp_to_configure: "{{ terminal_ftp_to_configure + [ item ] }}"
              loop: "{{ terminal_list }}"
              when: lookup('community.general.dig', item) not in terminal_ftp_present
              
            - name: print list
              debug:
                msg: "{{ terminal_ftp_to_configure }}"
            
            - name: Get speed number
              uri:
                url: "http://{{inventory_hostname}}/sws/app/addressbook/GetUsedSpeedNoInABook.jsp"
                method: POST
                return_content: yes
                body_format: form-urlencoded
                body:
                  type: "0"
              register: output_get_speed_no
        
            - name: Parse output
              set_fact:
                speed_no: "{{ (output_get_speed_no.content | from_yaml).usedSpeedNo.split(',')[-1] | int + 1  }}"
             
            - name: print umbers
              debug:
                msg: "Dlugosc {{terminal_ftp_to_configure | length}} ilosc pozycji {{ speed_no | int }}"
                
            - name: Generate speed no
              set_fact:
                numbers: "{{ range(speed_no | int, (terminal_ftp_to_configure | length) + (speed_no | int) ) | list }}"
            
            - name: Print numbers
              debug:
                msg: "{{ numbers }}"
             
                                         
            - name: Run URL command 
              uri:
                url: "http://{{inventory_hostname}}/sws/app/addressbook/SetIndividualInABook.jsp"
                method: POST
                return_content: yes
                body_format: form-urlencoded
                body:
                  cmd: add
                  ispeedNo: "3"
                  iname: "stanowisko0{{ item[-1] }}"
                  favorite:	"0"
                  smb_added: "0"
                  ftp_added: "1"
                  ftp_addr: "{{ lookup('community.general.dig', '{{item}}')}}"
                  ftp_port: "21"
                  ftp_anonymous: "1"
                  ftp_sharedFolder: "write"
                  ftp_folderDateFormat: "1"
                  ftp_filingPolicy: "3"
                  ftp_id: ""
                  ftp_folderPolicy: ""
                  ftp_filePrefix: ""
                  ftp_password: ""
              register: output_set_ftp
              loop: "{{ terminal_list }}"
                
                
                
          when: ftp_add == "tak"

      when: printer_model == 'Samsung SL-M3870FW'      
